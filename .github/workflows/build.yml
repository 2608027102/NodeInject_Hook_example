name: build
on:
  workflow_dispatch: {}
jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, windows]
        include:
        - build: linux
          os: ubuntu-latest
          rust: nightly
          target: x86_64-unknown-linux-musl
          archive-name: NodeInject-linux.tar.gz
        - build: windows
          os: windows-2019
          rust: nightly-x86_64-msvc
          target: x86_64-pc-windows-msvc
          archive-name: NodeInject-windows.7z
      fail-fast: false

    steps:
    - name: Checkout NodeInject 
      uses: actions/checkout@v2
      with:
        repository: DiamondHunters/NodeInject
    - name: Checkout repository 
      uses: actions/checkout@v2
      with:
          path: './js'
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true
        target: ${{ matrix.target }}

    - name: Build binary
      shell: bash
      run: |
        cp -f ./js/hook.js ./src/hooklog.js
        cargo build --verbose --release --target ${{ matrix.target }}
        cd ./js/license-gen
        cargo build --verbose --release --target ${{ matrix.target }}
        cd ../..
      env:
        RUST_BACKTRACE: 1

    - name: Build archive
      shell: bash
      run: |
        mkdir archive
        cp LICENSE README.md archive/
        ls -lR
        if [ "${{ matrix.build }}" = "windows" ]; then
          cp "./target/${{ matrix.target }}/release/node_inject.exe" ./archive/
          cp "./js/license-gen/target/${{ matrix.target }}/release/license-gen.exe" ./archive/
          cd archive
          7z a "${{ matrix.archive-name }}" LICENSE README.md node_inject.exe license-gen.exe
        else
          cp "./target/${{ matrix.target }}/release/node_inject" ./archive/
          cp "./js/license-gen/target/${{ matrix.target }}/release/license-gen" ./archive/
          cd archive
          tar -czf "${{ matrix.archive-name }}" LICENSE README.md node_inject license-gen
        fi
    - name: Upload archive
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.archive-name }}
        path: archive/${{ matrix.archive-name }}
        
    - name: action-push
      # You may pin to the exact commit or the version.
      # uses: ludeeus/action-push@0b7c1175655379c008f42bbaf524caa79cf89ec1
      uses: ludeeus/action-push@0.0.1
      
    - name: Push To Pages
      working-directory: ./dist
      run: |
          git init
          git checkout -b gh-pages
          git add -A
          # 这里把下面所有 `<YOUR_NAME>/<YOUR_EMAIL>/<COMMIT_MSG>/<YOUR_TOKEN>` 替换成你自己的就可以了
          git -c user.name='2608027102 -c user.email='1120955357@qq.com' commit -m 'Push To Pages'
          # 这里需要一个 共开仓库 的 secrets 配置，这里的 secrets 是一个环境变量，可以直接拿过来直接用
          git remote add origin https://${{secrets.DEPLOY_PRIVATE_KEY}}@github.com/2608027102/NodeInject_Hook_example.git
          git push origin gh-pages -f -q
